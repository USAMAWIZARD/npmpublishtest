name: publish Node.js Package	
on:	
  push:	
    branches:	
      - master	
jobs:	
  publish-npmjs:	
    runs-on: ubuntu-latest	
    steps:	
      - uses: actions/checkout@v3	
        with:	
          token: ${{ secrets.ACCESS_TOKEN }}	
      - run: git config --global user.name ${{ secrets.GIT_USERNAME }}	
      - run: git config --global user.email ${{ secrets.GIT_EMAIL }}	
      - uses: actions/setup-java@v3	
        with:	
          java-version: '11'	
          distribution: 'adopt'	
      - uses: actions/setup-node@v3	
        with:	
         node-version: '16.x'	
         registry-url: 'https://registry.npmjs.org'	
      - name: Configure npm
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
          cat .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Update The Snapshot	
        id: get_version	
        run: echo "::set-output name=VERSION::$(echo ${GITHUB_REF##*/} | cut -d v -f 2)"	
      - run: npm ci
      - run: echo //registry.npmjs.org/:_authToken=$NPM_TOKEN > .npmrc
      - run: npm install --include=dev	
      - run: npm install --save-dev @babel/cli	
      - run: npm run compile	
      - run: echo "LATEST_SNAPSHOT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV	
      - run: echo "PREVIOUS_SNAPSHOT_VERSION=$(npm view ${{ secrets.NPM_USERNAME }}/test dist-tags --json | jq .SNAPSHOT --raw-output)" >> $GITHUB_ENV	
      - run: npm version ${{ env.LATEST_SNAPSHOT_VERSION }}"-`date +"%Y-%b-%d-%I-%M"`"  --no-git-tag-version	
      - run: npm publish --tag SNAPSHOT	
      - run: echo `npm unpublish test@${{ env.PREVIOUS_SNAPSHOT_VERSION }}`
        env:	
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}	
